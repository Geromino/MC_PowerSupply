;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/1/2020 9:40:14 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x29D4      	GOTO       468
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0003	0x0000      	NOP
0x0004	0x0000      	NOP
0x0005	0x0000      	NOP
0x0006	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0007	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0008	0x301D      	MOVLW      29
0x0009	0x1283      	BCF        STATUS, 5
0x000A	0x1303      	BCF        STATUS, 6
0x000B	0x00FC      	MOVWF      R12
0x000C	0x3091      	MOVLW      145
0x000D	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x000E	0x0BFD      	DECFSZ     R13, 1
0x000F	0x280E      	GOTO       L_Delay_5500us5
0x0010	0x0BFC      	DECFSZ     R12, 1
0x0011	0x280E      	GOTO       L_Delay_5500us5
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0012	0x0008      	RETURN
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0013	0x3042      	MOVLW      66
0x0014	0x1283      	BCF        STATUS, 5
0x0015	0x1303      	BCF        STATUS, 6
0x0016	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0017	0x0BFD      	DECFSZ     R13, 1
0x0018	0x2817      	GOTO       L_Delay_50us2
0x0019	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x001A	0x0008      	RETURN
; end of _Delay_50us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x001B	0x1283      	BCF        STATUS, 5
0x001C	0x1303      	BCF        STATUS, 6
0x001D	0x1BC0      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x001E	0x2821      	GOTO       L__Lcd_Cmd21
0x001F	0x1187      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0020	0x2822      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0021	0x1587      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0022	0x1B40      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x0023	0x2826      	GOTO       L__Lcd_Cmd23
0x0024	0x1107      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0025	0x2827      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0026	0x1507      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0027	0x1AC0      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x0028	0x282B      	GOTO       L__Lcd_Cmd25
0x0029	0x1087      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x002A	0x282C      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x002B	0x1487      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x002C	0x1A40      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x002D	0x2830      	GOTO       L__Lcd_Cmd27
0x002E	0x1007      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x002F	0x2831      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0030	0x1407      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0031	0x182F      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0032	0x2835      	GOTO       L__Lcd_Cmd29
0x0033	0x1607      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0034	0x2836      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0035	0x1207      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0036	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x0037	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0038	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x0039	0x19C0      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x003A	0x283D      	GOTO       L__Lcd_Cmd31
0x003B	0x1187      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x003C	0x283E      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x003D	0x1587      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x003E	0x1940      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x003F	0x2842      	GOTO       L__Lcd_Cmd33
0x0040	0x1107      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0041	0x2843      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0042	0x1507      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0043	0x18C0      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x0044	0x2847      	GOTO       L__Lcd_Cmd35
0x0045	0x1087      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0046	0x2848      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0047	0x1487      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0048	0x1840      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x0049	0x284C      	GOTO       L__Lcd_Cmd37
0x004A	0x1007      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x004B	0x284D      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x004C	0x1407      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x004D	0x182F      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x004E	0x2851      	GOTO       L__Lcd_Cmd39
0x004F	0x1607      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0050	0x2852      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x0051	0x1207      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0052	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x0053	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0054	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x0055	0x1C2F      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0056	0x2859      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x0057	0x2008      	CALL       _Delay_5500us
0x0058	0x285A      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0059	0x2013      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x005A	0x0008      	RETURN
; end of _Lcd_Cmd
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x005B	0x1283      	BCF        STATUS, 5
0x005C	0x1303      	BCF        STATUS, 6
0x005D	0x082E      	MOVF       ___DoICPAddr+1, 0
0x005E	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x005F	0x082D      	MOVF       ___DoICPAddr, 0
0x0060	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0061	0x0008      	RETURN
; end of _____DoICP
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0062	0x1283      	BCF        STATUS, 5
0x0063	0x1303      	BCF        STATUS, 6
0x0064	0x102F      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x0065	0x083F      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x0066	0x00C0      	MOVWF      FARG_Lcd_Cmd_out_char
0x0067	0x201B      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0068	0x142F      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0069	0x0008      	RETURN
; end of _Lcd_Chr_CP
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x006A	0x287C      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x006B	0x3080      	MOVLW      128
0x006C	0x1283      	BCF        STATUS, 5
0x006D	0x1303      	BCF        STATUS, 6
0x006E	0x00BA      	MOVWF      FARG_Lcd_Out_row
0x006F	0x288F      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x0070	0x30C0      	MOVLW      192
0x0071	0x00BA      	MOVWF      FARG_Lcd_Out_row
0x0072	0x288F      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0073	0x3094      	MOVLW      148
0x0074	0x00BA      	MOVWF      FARG_Lcd_Out_row
0x0075	0x288F      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0076	0x30D4      	MOVLW      212
0x0077	0x00BA      	MOVWF      FARG_Lcd_Out_row
0x0078	0x288F      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0079	0x3080      	MOVLW      128
0x007A	0x00BA      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x007B	0x288F      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x007C	0x1283      	BCF        STATUS, 5
0x007D	0x1303      	BCF        STATUS, 6
0x007E	0x083A      	MOVF       FARG_Lcd_Out_row, 0
0x007F	0x3A01      	XORLW      1
0x0080	0x1903      	BTFSC      STATUS, 2
0x0081	0x286B      	GOTO       L_Lcd_Out13
0x0082	0x083A      	MOVF       FARG_Lcd_Out_row, 0
0x0083	0x3A02      	XORLW      2
0x0084	0x1903      	BTFSC      STATUS, 2
0x0085	0x2870      	GOTO       L_Lcd_Out14
0x0086	0x083A      	MOVF       FARG_Lcd_Out_row, 0
0x0087	0x3A03      	XORLW      3
0x0088	0x1903      	BTFSC      STATUS, 2
0x0089	0x2873      	GOTO       L_Lcd_Out15
0x008A	0x083A      	MOVF       FARG_Lcd_Out_row, 0
0x008B	0x3A04      	XORLW      4
0x008C	0x1903      	BTFSC      STATUS, 2
0x008D	0x2876      	GOTO       L_Lcd_Out16
0x008E	0x2879      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x008F	0x033B      	DECF       FARG_Lcd_Out_column, 0
0x0090	0x00F0      	MOVWF      R0
0x0091	0x083A      	MOVF       FARG_Lcd_Out_row, 0
0x0092	0x07F0      	ADDWF      R0, 1
0x0093	0x0870      	MOVF       R0, 0
0x0094	0x00BA      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0095	0x0870      	MOVF       R0, 0
0x0096	0x00C0      	MOVWF      FARG_Lcd_Cmd_out_char
0x0097	0x201B      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0098	0x102F      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x0099	0x01BD      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x009A	0x083D      	MOVF       Lcd_Out_i_L0, 0
0x009B	0x073C      	ADDWF      FARG_Lcd_Out_text, 0
0x009C	0x0084      	MOVWF      FSR
0x009D	0x0800      	MOVF       INDF, 0
0x009E	0x1903      	BTFSC      STATUS, 2
0x009F	0x28A8      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x00A0	0x083D      	MOVF       Lcd_Out_i_L0, 0
0x00A1	0x073C      	ADDWF      FARG_Lcd_Out_text, 0
0x00A2	0x0084      	MOVWF      FSR
0x00A3	0x0800      	MOVF       INDF, 0
0x00A4	0x00BF      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x00A5	0x2062      	CALL       _Lcd_Chr_CP
0x00A6	0x0ABD      	INCF       Lcd_Out_i_L0, 1
0x00A7	0x289A      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x00A8	0x142F      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x00A9	0x0008      	RETURN
; end of _Lcd_Out
_lcd_puts:
;lcd.c,28 :: 		lcd_puts(char row, char column, const char *s)
;lcd.c,31 :: 		switch(row){
0x00AA	0x28BD      	GOTO       L_lcd_puts0
;lcd.c,32 :: 		case 1: Lcd_Cmd(_LCD_FIRST_ROW);
L_lcd_puts2:
0x00AB	0x3080      	MOVLW      128
0x00AC	0x1283      	BCF        STATUS, 5
0x00AD	0x1303      	BCF        STATUS, 6
0x00AE	0x00C0      	MOVWF      FARG_Lcd_Cmd_out_char
0x00AF	0x201B      	CALL       _Lcd_Cmd
;lcd.c,33 :: 		break;
0x00B0	0x28CF      	GOTO       L_lcd_puts1
;lcd.c,34 :: 		case 2: Lcd_Cmd(_LCD_SECOND_ROW);
L_lcd_puts3:
0x00B1	0x30C0      	MOVLW      192
0x00B2	0x00C0      	MOVWF      FARG_Lcd_Cmd_out_char
0x00B3	0x201B      	CALL       _Lcd_Cmd
;lcd.c,35 :: 		break;
0x00B4	0x28CF      	GOTO       L_lcd_puts1
;lcd.c,36 :: 		case 3: Lcd_Cmd(_LCD_THIRD_ROW);
L_lcd_puts4:
0x00B5	0x3094      	MOVLW      148
0x00B6	0x00C0      	MOVWF      FARG_Lcd_Cmd_out_char
0x00B7	0x201B      	CALL       _Lcd_Cmd
;lcd.c,37 :: 		break;
0x00B8	0x28CF      	GOTO       L_lcd_puts1
;lcd.c,38 :: 		case 4: Lcd_Cmd(_LCD_FOURTH_ROW);
L_lcd_puts5:
0x00B9	0x30D4      	MOVLW      212
0x00BA	0x00C0      	MOVWF      FARG_Lcd_Cmd_out_char
0x00BB	0x201B      	CALL       _Lcd_Cmd
;lcd.c,39 :: 		break;
0x00BC	0x28CF      	GOTO       L_lcd_puts1
;lcd.c,40 :: 		}
L_lcd_puts0:
0x00BD	0x1283      	BCF        STATUS, 5
0x00BE	0x1303      	BCF        STATUS, 6
0x00BF	0x083A      	MOVF       FARG_lcd_puts_row, 0
0x00C0	0x3A01      	XORLW      1
0x00C1	0x1903      	BTFSC      STATUS, 2
0x00C2	0x28AB      	GOTO       L_lcd_puts2
0x00C3	0x083A      	MOVF       FARG_lcd_puts_row, 0
0x00C4	0x3A02      	XORLW      2
0x00C5	0x1903      	BTFSC      STATUS, 2
0x00C6	0x28B1      	GOTO       L_lcd_puts3
0x00C7	0x083A      	MOVF       FARG_lcd_puts_row, 0
0x00C8	0x3A03      	XORLW      3
0x00C9	0x1903      	BTFSC      STATUS, 2
0x00CA	0x28B5      	GOTO       L_lcd_puts4
0x00CB	0x083A      	MOVF       FARG_lcd_puts_row, 0
0x00CC	0x3A04      	XORLW      4
0x00CD	0x1903      	BTFSC      STATUS, 2
0x00CE	0x28B9      	GOTO       L_lcd_puts5
L_lcd_puts1:
;lcd.c,41 :: 		for(cnt=1;cnt<column;cnt++)Lcd_Cmd(_LCD_MOVE_CURSOR_RIGHT);
0x00CF	0x3001      	MOVLW      1
0x00D0	0x00BE      	MOVWF      lcd_puts_cnt_L0
L_lcd_puts6:
0x00D1	0x083B      	MOVF       FARG_lcd_puts_column, 0
0x00D2	0x023E      	SUBWF      lcd_puts_cnt_L0, 0
0x00D3	0x1803      	BTFSC      STATUS, 0
0x00D4	0x28DA      	GOTO       L_lcd_puts7
0x00D5	0x3014      	MOVLW      20
0x00D6	0x00C0      	MOVWF      FARG_Lcd_Cmd_out_char
0x00D7	0x201B      	CALL       _Lcd_Cmd
0x00D8	0x0ABE      	INCF       lcd_puts_cnt_L0, 1
0x00D9	0x28D1      	GOTO       L_lcd_puts6
L_lcd_puts7:
;lcd.c,42 :: 		while(*s)Lcd_Chr_Cp(*s++);
L_lcd_puts9:
0x00DA	0x083C      	MOVF       FARG_lcd_puts_s, 0
0x00DB	0x00AD      	MOVWF      ___DoICPAddr
0x00DC	0x083D      	MOVF       FARG_lcd_puts_s+1, 0
0x00DD	0x00AE      	MOVWF      ___DoICPAddr+1
0x00DE	0x205B      	CALL       _____DoICP
0x00DF	0x118A      	BCF        PCLATH, 3
0x00E0	0x120A      	BCF        PCLATH, 4
0x00E1	0x00F0      	MOVWF      R0
0x00E2	0x0870      	MOVF       R0, 0
0x00E3	0x1903      	BTFSC      STATUS, 2
0x00E4	0x28F2      	GOTO       L_lcd_puts10
0x00E5	0x083C      	MOVF       FARG_lcd_puts_s, 0
0x00E6	0x00AD      	MOVWF      ___DoICPAddr
0x00E7	0x083D      	MOVF       FARG_lcd_puts_s+1, 0
0x00E8	0x00AE      	MOVWF      ___DoICPAddr+1
0x00E9	0x205B      	CALL       _____DoICP
0x00EA	0x118A      	BCF        PCLATH, 3
0x00EB	0x120A      	BCF        PCLATH, 4
0x00EC	0x00BF      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x00ED	0x2062      	CALL       _Lcd_Chr_CP
0x00EE	0x0ABC      	INCF       FARG_lcd_puts_s, 1
0x00EF	0x1903      	BTFSC      STATUS, 2
0x00F0	0x0ABD      	INCF       FARG_lcd_puts_s+1, 1
0x00F1	0x28DA      	GOTO       L_lcd_puts9
L_lcd_puts10:
;lcd.c,43 :: 		}//End of lcd_puts function
L_end_lcd_puts:
0x00F2	0x0008      	RETURN
; end of _lcd_puts
_system_init:
;test.c,230 :: 		void system_init()
;test.c,233 :: 		TRISA.B4 = 1;
0x00F3	0x1683      	BSF        STATUS, 5
0x00F4	0x1303      	BCF        STATUS, 6
0x00F5	0x1605      	BSF        TRISA, 4
;test.c,234 :: 		TRISC.B6 = 1;
0x00F6	0x1707      	BSF        TRISC, 6
;test.c,235 :: 		TRISC.B7 = 1;
0x00F7	0x1787      	BSF        TRISC, 7
;test.c,237 :: 		position = Encoder_CLK;// Sotred the CLK position on system init, before the while loop start.
0x00F8	0x3000      	MOVLW      0
0x00F9	0x1283      	BCF        STATUS, 5
0x00FA	0x1B87      	BTFSC      RC7_bit, BitPos(RC7_bit+0)
0x00FB	0x3001      	MOVLW      1
0x00FC	0x00AB      	MOVWF      _position
0x00FD	0x01AC      	CLRF       _position+1
;test.c,238 :: 		}
L_end_system_init:
0x00FE	0x0008      	RETURN
; end of _system_init
_ADC_Read:
;test.c,179 :: 		unsigned int ADC_Read(unsigned char channel)
;test.c,181 :: 		if(channel > 7) //If Invalid channel selected
0x00FF	0x1283      	BCF        STATUS, 5
0x0100	0x1303      	BCF        STATUS, 6
0x0101	0x083A      	MOVF       FARG_ADC_Read_channel, 0
0x0102	0x3C07      	SUBLW      7
0x0103	0x1803      	BTFSC      STATUS, 0
0x0104	0x2908      	GOTO       L_ADC_Read11
;test.c,182 :: 		return 0;     //Return 0
0x0105	0x01F0      	CLRF       R0
0x0106	0x01F1      	CLRF       R0+1
0x0107	0x2929      	GOTO       L_end_ADC_Read
L_ADC_Read11:
;test.c,184 :: 		ADCON0 &= 0xC5;       //Clearing the Channel Selection Bits
0x0108	0x30C5      	MOVLW      197
0x0109	0x059F      	ANDWF      ADCON0, 1
;test.c,185 :: 		ADCON0 |= channel<<3; //Setting the required Bits
0x010A	0x083A      	MOVF       FARG_ADC_Read_channel, 0
0x010B	0x00F0      	MOVWF      R0
0x010C	0x0DF0      	RLF        R0, 1
0x010D	0x1070      	BCF        R0, 0
0x010E	0x0DF0      	RLF        R0, 1
0x010F	0x1070      	BCF        R0, 0
0x0110	0x0DF0      	RLF        R0, 1
0x0111	0x1070      	BCF        R0, 0
0x0112	0x0870      	MOVF       R0, 0
0x0113	0x049F      	IORWF      ADCON0, 1
;test.c,186 :: 		Delay_ms(2);          //Acquisition time to charge hold capacitor
0x0114	0x300B      	MOVLW      11
0x0115	0x00FC      	MOVWF      R12
0x0116	0x3062      	MOVLW      98
0x0117	0x00FD      	MOVWF      R13
L_ADC_Read12:
0x0118	0x0BFD      	DECFSZ     R13, 1
0x0119	0x2918      	GOTO       L_ADC_Read12
0x011A	0x0BFC      	DECFSZ     R12, 1
0x011B	0x2918      	GOTO       L_ADC_Read12
0x011C	0x0000      	NOP
;test.c,187 :: 		GO_DONE_bit = 1;      //Initializes A/D Conversion
0x011D	0x151F      	BSF        GO_DONE_bit, BitPos(GO_DONE_bit+0)
;test.c,188 :: 		while(GO_DONE_bit);   //Wait for A/D Conversion to complete
L_ADC_Read13:
0x011E	0x1D1F      	BTFSS      GO_DONE_bit, BitPos(GO_DONE_bit+0)
0x011F	0x2921      	GOTO       L_ADC_Read14
0x0120	0x291E      	GOTO       L_ADC_Read13
L_ADC_Read14:
;test.c,189 :: 		return ((ADRESH<<8)+ADRESL); //Returns Result
0x0121	0x081E      	MOVF       ADRESH, 0
0x0122	0x00F1      	MOVWF      R0+1
0x0123	0x01F0      	CLRF       R0
0x0124	0x1683      	BSF        STATUS, 5
0x0125	0x081E      	MOVF       ADRESL, 0
0x0126	0x07F0      	ADDWF      R0, 1
0x0127	0x1803      	BTFSC      STATUS, 0
0x0128	0x0AF1      	INCF       R0+1, 1
;test.c,190 :: 		}
L_end_ADC_Read:
0x0129	0x0008      	RETURN
; end of _ADC_Read
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x012A	0x205B      	CALL       _____DoICP
0x012B	0x118A      	BCF        PCLATH, 3
0x012C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x012D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x012E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x012F	0x0AAD      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0130	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0131	0x0AAE      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0132	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0133	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0134	0x292A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0135	0x0008      	RETURN
; end of ___CC2DW
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0136	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x0137	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x0138	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x0139	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x013A	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x013B	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x013C	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x013D	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x013E	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x013F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x0140	0x294A      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x0141	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x0142	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0143	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0144	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0145	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x0146	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x0147	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x0148	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x0149	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x014A	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x014B	0x2952      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x014C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x014D	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x014E	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x014F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x0150	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x0151	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x0152	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0153	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0154	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0155	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x0156	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x0157	0x293D      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x0158	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x0159	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x015A	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x015B	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x015C	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x015D	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x015E	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x015F	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x0160	0x0008      	RETURN
; end of _Mul_16X16_U
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0161	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0162	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0163	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0164	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0165	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0166	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0167	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x0168	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x0169	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x016A	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x016B	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x016C	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x016D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x016E	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x016F	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0170	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0171	0x2979      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0172	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0173	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0174	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0175	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0176	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x0177	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x0178	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x0179	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x017A	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x017B	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x017C	0x2967      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x017D	0x0008      	RETURN
; end of _Div_16X16_U
_ADC_Init:
;test.c,172 :: 		void ADC_Init()
;test.c,174 :: 		ADCON0 = 0x41; //ADC Module Turned ON and Clock is selected
0x017E	0x3041      	MOVLW      65
0x017F	0x1283      	BCF        STATUS, 5
0x0180	0x1303      	BCF        STATUS, 6
0x0181	0x009F      	MOVWF      ADCON0
;test.c,175 :: 		ADCON1 = 0xC5; //RA0_&_RA1 are analog input, all other pins as digital i/o
0x0182	0x30C5      	MOVLW      197
0x0183	0x1683      	BSF        STATUS, 5
0x0184	0x009F      	MOVWF      ADCON1
;test.c,177 :: 		}
L_end_ADC_Init:
0x0185	0x0008      	RETURN
; end of _ADC_Init
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0186	0x1683      	BSF        STATUS, 5
0x0187	0x1303      	BCF        STATUS, 6
0x0188	0x1287      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x0189	0x1207      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x018A	0x1007      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x018B	0x1087      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x018C	0x1107      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x018D	0x1187      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x018E	0x1283      	BCF        STATUS, 5
0x018F	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x0190	0x1207      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x0191	0x1187      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x0192	0x1107      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x0193	0x1087      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x0194	0x1007      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x0195	0x2008      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0196	0x2008      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0197	0x2008      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x0198	0x1487      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x0199	0x1407      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x019A	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x019B	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x019C	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x019D	0x2008      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x019E	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x019F	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x01A0	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x01A1	0x2008      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x01A2	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x01A3	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x01A4	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x01A5	0x2008      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x01A6	0x1007      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x01A7	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x01A8	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x01A9	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x01AA	0x2008      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x01AB	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x01AC	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x01AD	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x01AE	0x1087      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x01AF	0x1587      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x01B0	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x01B1	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x01B2	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x01B3	0x2008      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x01B4	0x1187      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x01B5	0x1407      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x01B6	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x01B7	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x01B8	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x01B9	0x1007      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x01BA	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x01BB	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x01BC	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x01BD	0x2008      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x01BE	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x01BF	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x01C0	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x01C1	0x1407      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x01C2	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x01C3	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x01C4	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x01C5	0x2008      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x01C6	0x1007      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x01C7	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x01C8	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x01C9	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x01CA	0x1587      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x01CB	0x1507      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x01CC	0x1487      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x01CD	0x1407      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x01CE	0x1687      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x01CF	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x01D0	0x1287      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x01D1	0x2008      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x01D2	0x142F      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x01D3	0x0008      	RETURN
; end of _Lcd_Init
_main:
0x01D4	0x3030      	MOVLW      48
0x01D5	0x1283      	BCF        STATUS, 5
0x01D6	0x1303      	BCF        STATUS, 6
0x01D7	0x00A0      	MOVWF      ?lstr2_test
0x01D8	0x302E      	MOVLW      46
0x01D9	0x00A1      	MOVWF      33
0x01DA	0x3030      	MOVLW      48
0x01DB	0x00A2      	MOVWF      34
0x01DC	0x3030      	MOVLW      48
0x01DD	0x00A3      	MOVWF      35
0x01DE	0x01A4      	CLRF       36
0x01DF	0x3030      	MOVLW      48
0x01E0	0x00A5      	MOVWF      ?lstr1_test
0x01E1	0x3030      	MOVLW      48
0x01E2	0x00A6      	MOVWF      38
0x01E3	0x302E      	MOVLW      46
0x01E4	0x00A7      	MOVWF      39
0x01E5	0x3030      	MOVLW      48
0x01E6	0x00A8      	MOVWF      40
0x01E7	0x01A9      	CLRF       41
;test.c,57 :: 		void main()
;test.c,60 :: 		char *voltage = "00.0";
0x01E8	0x3025      	MOVLW      ?lstr1_test
0x01E9	0x00B7      	MOVWF      main_voltage_L0
0x01EA	0x3020      	MOVLW      ?lstr2_test
0x01EB	0x00B8      	MOVWF      main_current_L0
;test.c,66 :: 		TRISA = 0xFF;      // all input
0x01EC	0x30FF      	MOVLW      255
0x01ED	0x1683      	BSF        STATUS, 5
0x01EE	0x0085      	MOVWF      TRISA
;test.c,67 :: 		TRISB = 0x00;      // all output
0x01EF	0x0186      	CLRF       TRISB
;test.c,68 :: 		TRISC = 0xC0;      // RC6 & RC7 asinput
0x01F0	0x30C0      	MOVLW      192
0x01F1	0x0087      	MOVWF      TRISC
;test.c,70 :: 		PORTB = 0x00;
0x01F2	0x1283      	BCF        STATUS, 5
0x01F3	0x0186      	CLRF       PORTB
;test.c,71 :: 		PORTC = 0x00;
0x01F4	0x0187      	CLRF       PORTC
;test.c,73 :: 		ADCON1 = 0xC0;
0x01F5	0x30C0      	MOVLW      192
0x01F6	0x1683      	BSF        STATUS, 5
0x01F7	0x009F      	MOVWF      ADCON1
;test.c,74 :: 		ADCON0 = 0x41;     // RA0 & RA1 as analog input, RA3 as VREF+, all other as digital i/o
0x01F8	0x3041      	MOVLW      65
0x01F9	0x1283      	BCF        STATUS, 5
0x01FA	0x009F      	MOVWF      ADCON0
;test.c,75 :: 		CMCON = 0x07;      // comperator disable
0x01FB	0x3007      	MOVLW      7
0x01FC	0x1683      	BSF        STATUS, 5
0x01FD	0x009C      	MOVWF      CMCON
;test.c,77 :: 		lcd_init();
0x01FE	0x2186      	CALL       _Lcd_Init
;test.c,78 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x01FF	0x300C      	MOVLW      12
0x0200	0x00C0      	MOVWF      FARG_Lcd_Cmd_out_char
0x0201	0x201B      	CALL       _Lcd_Cmd
;test.c,80 :: 		lcd_puts(1, 1,  "Zchar Paparov");
0x0202	0x3001      	MOVLW      1
0x0203	0x00BA      	MOVWF      FARG_lcd_puts_row
0x0204	0x3001      	MOVLW      1
0x0205	0x00BB      	MOVWF      FARG_lcd_puts_column
0x0206	0x3009      	MOVLW      ?lstr_3_test
0x0207	0x00BC      	MOVWF      FARG_lcd_puts_s
0x0208	0x3003      	MOVLW      hi_addr(?lstr_3_test)
0x0209	0x00BD      	MOVWF      FARG_lcd_puts_s+1
0x020A	0x20AA      	CALL       _lcd_puts
;test.c,82 :: 		system_init();
0x020B	0x20F3      	CALL       _system_init
;test.c,83 :: 		ADC_Init();      //Initializes ADC Module
0x020C	0x217E      	CALL       _ADC_Init
;test.c,85 :: 		counter = 0;
0x020D	0x1283      	BCF        STATUS, 5
0x020E	0x01AA      	CLRF       _counter
;test.c,86 :: 		result = 0;
0x020F	0x01B5      	CLRF       main_result_L0
0x0210	0x01B6      	CLRF       main_result_L0+1
;test.c,88 :: 		for(i=0;i<ADC_ARRAY_SIZE;i++) display[i]=0;
0x0211	0x01B4      	CLRF       main_i_L0
L_main0:
0x0212	0x3004      	MOVLW      4
0x0213	0x0234      	SUBWF      main_i_L0, 0
0x0214	0x1803      	BTFSC      STATUS, 0
0x0215	0x2A1C      	GOTO       L_main1
0x0216	0x0834      	MOVF       main_i_L0, 0
0x0217	0x3E30      	ADDLW      main_display_L0
0x0218	0x0084      	MOVWF      FSR
0x0219	0x0180      	CLRF       INDF
0x021A	0x0AB4      	INCF       main_i_L0, 1
0x021B	0x2A12      	GOTO       L_main0
L_main1:
;test.c,90 :: 		while(1)
L_main3:
;test.c,123 :: 		if(!RC6_bit) counter++;
0x021C	0x1B07      	BTFSC      RC6_bit, BitPos(RC6_bit+0)
0x021D	0x2A1F      	GOTO       L_main5
0x021E	0x0AAA      	INCF       _counter, 1
L_main5:
;test.c,124 :: 		if(!RC7_bit) counter--;
0x021F	0x1B87      	BTFSC      RC7_bit, BitPos(RC7_bit+0)
0x0220	0x2A22      	GOTO       L_main6
0x0221	0x03AA      	DECF       _counter, 1
L_main6:
;test.c,125 :: 		PORTB = counter;
0x0222	0x082A      	MOVF       _counter, 0
0x0223	0x0086      	MOVWF      PORTB
;test.c,127 :: 		Delay_ms(50);
0x0224	0x3002      	MOVLW      2
0x0225	0x00FB      	MOVWF      R11
0x0226	0x3004      	MOVLW      4
0x0227	0x00FC      	MOVWF      R12
0x0228	0x30BA      	MOVLW      186
0x0229	0x00FD      	MOVWF      R13
L_main7:
0x022A	0x0BFD      	DECFSZ     R13, 1
0x022B	0x2A2A      	GOTO       L_main7
0x022C	0x0BFC      	DECFSZ     R12, 1
0x022D	0x2A2A      	GOTO       L_main7
0x022E	0x0BFB      	DECFSZ     R11, 1
0x022F	0x2A2A      	GOTO       L_main7
0x0230	0x0000      	NOP
;test.c,131 :: 		a = ADC_Read(0); //Reading Analog Channel 0
0x0231	0x01BA      	CLRF       FARG_ADC_Read_channel
0x0232	0x20FF      	CALL       _ADC_Read
;test.c,132 :: 		result = 3*a;
0x0233	0x3003      	MOVLW      3
0x0234	0x1283      	BCF        STATUS, 5
0x0235	0x1303      	BCF        STATUS, 6
0x0236	0x00F4      	MOVWF      R4
0x0237	0x3000      	MOVLW      0
0x0238	0x00F5      	MOVWF      R4+1
0x0239	0x2136      	CALL       _Mul_16X16_U
0x023A	0x0870      	MOVF       R0, 0
0x023B	0x00B5      	MOVWF      main_result_L0
0x023C	0x0871      	MOVF       R0+1, 0
0x023D	0x00B6      	MOVWF      main_result_L0+1
;test.c,136 :: 		Delay_ms(100);   //Delay
0x023E	0x3003      	MOVLW      3
0x023F	0x00FB      	MOVWF      R11
0x0240	0x3008      	MOVLW      8
0x0241	0x00FC      	MOVWF      R12
0x0242	0x3077      	MOVLW      119
0x0243	0x00FD      	MOVWF      R13
L_main8:
0x0244	0x0BFD      	DECFSZ     R13, 1
0x0245	0x2A44      	GOTO       L_main8
0x0246	0x0BFC      	DECFSZ     R12, 1
0x0247	0x2A44      	GOTO       L_main8
0x0248	0x0BFB      	DECFSZ     R11, 1
0x0249	0x2A44      	GOTO       L_main8
;test.c,137 :: 		voltage[0]= result/1000+48;
0x024A	0x30E8      	MOVLW      232
0x024B	0x00F4      	MOVWF      R4
0x024C	0x3003      	MOVLW      3
0x024D	0x00F5      	MOVWF      R4+1
0x024E	0x0835      	MOVF       main_result_L0, 0
0x024F	0x00F0      	MOVWF      R0
0x0250	0x0836      	MOVF       main_result_L0+1, 0
0x0251	0x00F1      	MOVWF      R0+1
0x0252	0x2161      	CALL       _Div_16X16_U
0x0253	0x3030      	MOVLW      48
0x0254	0x07F0      	ADDWF      R0, 1
0x0255	0x0837      	MOVF       main_voltage_L0, 0
0x0256	0x0084      	MOVWF      FSR
0x0257	0x0870      	MOVF       R0, 0
0x0258	0x0080      	MOVWF      INDF
;test.c,138 :: 		voltage[1]= (result/100)%10+48;
0x0259	0x0A37      	INCF       main_voltage_L0, 0
0x025A	0x00B9      	MOVWF      FLOC__main
0x025B	0x3064      	MOVLW      100
0x025C	0x00F4      	MOVWF      R4
0x025D	0x3000      	MOVLW      0
0x025E	0x00F5      	MOVWF      R4+1
0x025F	0x0835      	MOVF       main_result_L0, 0
0x0260	0x00F0      	MOVWF      R0
0x0261	0x0836      	MOVF       main_result_L0+1, 0
0x0262	0x00F1      	MOVWF      R0+1
0x0263	0x2161      	CALL       _Div_16X16_U
0x0264	0x300A      	MOVLW      10
0x0265	0x00F4      	MOVWF      R4
0x0266	0x3000      	MOVLW      0
0x0267	0x00F5      	MOVWF      R4+1
0x0268	0x2161      	CALL       _Div_16X16_U
0x0269	0x0878      	MOVF       R8, 0
0x026A	0x00F0      	MOVWF      R0
0x026B	0x0879      	MOVF       R8+1, 0
0x026C	0x00F1      	MOVWF      R0+1
0x026D	0x3030      	MOVLW      48
0x026E	0x07F0      	ADDWF      R0, 1
0x026F	0x0839      	MOVF       FLOC__main, 0
0x0270	0x0084      	MOVWF      FSR
0x0271	0x0870      	MOVF       R0, 0
0x0272	0x0080      	MOVWF      INDF
;test.c,139 :: 		voltage[3]= (result/10)%10+48;
0x0273	0x3003      	MOVLW      3
0x0274	0x0737      	ADDWF      main_voltage_L0, 0
0x0275	0x00B9      	MOVWF      FLOC__main
0x0276	0x300A      	MOVLW      10
0x0277	0x00F4      	MOVWF      R4
0x0278	0x3000      	MOVLW      0
0x0279	0x00F5      	MOVWF      R4+1
0x027A	0x0835      	MOVF       main_result_L0, 0
0x027B	0x00F0      	MOVWF      R0
0x027C	0x0836      	MOVF       main_result_L0+1, 0
0x027D	0x00F1      	MOVWF      R0+1
0x027E	0x2161      	CALL       _Div_16X16_U
0x027F	0x300A      	MOVLW      10
0x0280	0x00F4      	MOVWF      R4
0x0281	0x3000      	MOVLW      0
0x0282	0x00F5      	MOVWF      R4+1
0x0283	0x2161      	CALL       _Div_16X16_U
0x0284	0x0878      	MOVF       R8, 0
0x0285	0x00F0      	MOVWF      R0
0x0286	0x0879      	MOVF       R8+1, 0
0x0287	0x00F1      	MOVWF      R0+1
0x0288	0x3030      	MOVLW      48
0x0289	0x07F0      	ADDWF      R0, 1
0x028A	0x0839      	MOVF       FLOC__main, 0
0x028B	0x0084      	MOVWF      FSR
0x028C	0x0870      	MOVF       R0, 0
0x028D	0x0080      	MOVWF      INDF
;test.c,140 :: 		Lcd_Out(2,1,voltage);
0x028E	0x3002      	MOVLW      2
0x028F	0x00BA      	MOVWF      FARG_Lcd_Out_row
0x0290	0x3001      	MOVLW      1
0x0291	0x00BB      	MOVWF      FARG_Lcd_Out_column
0x0292	0x0837      	MOVF       main_voltage_L0, 0
0x0293	0x00BC      	MOVWF      FARG_Lcd_Out_text
0x0294	0x206A      	CALL       _Lcd_Out
;test.c,142 :: 		Delay_ms(100);
0x0295	0x3003      	MOVLW      3
0x0296	0x00FB      	MOVWF      R11
0x0297	0x3008      	MOVLW      8
0x0298	0x00FC      	MOVWF      R12
0x0299	0x3077      	MOVLW      119
0x029A	0x00FD      	MOVWF      R13
L_main9:
0x029B	0x0BFD      	DECFSZ     R13, 1
0x029C	0x2A9B      	GOTO       L_main9
0x029D	0x0BFC      	DECFSZ     R12, 1
0x029E	0x2A9B      	GOTO       L_main9
0x029F	0x0BFB      	DECFSZ     R11, 1
0x02A0	0x2A9B      	GOTO       L_main9
;test.c,144 :: 		a = ADC_Read(1); //Reading Analog Channel 0
0x02A1	0x3001      	MOVLW      1
0x02A2	0x00BA      	MOVWF      FARG_ADC_Read_channel
0x02A3	0x20FF      	CALL       _ADC_Read
;test.c,145 :: 		result = 5*a;
0x02A4	0x3005      	MOVLW      5
0x02A5	0x1283      	BCF        STATUS, 5
0x02A6	0x1303      	BCF        STATUS, 6
0x02A7	0x00F4      	MOVWF      R4
0x02A8	0x3000      	MOVLW      0
0x02A9	0x00F5      	MOVWF      R4+1
0x02AA	0x2136      	CALL       _Mul_16X16_U
0x02AB	0x0870      	MOVF       R0, 0
0x02AC	0x00B5      	MOVWF      main_result_L0
0x02AD	0x0871      	MOVF       R0+1, 0
0x02AE	0x00B6      	MOVWF      main_result_L0+1
;test.c,149 :: 		Delay_ms(100);   //Delay
0x02AF	0x3003      	MOVLW      3
0x02B0	0x00FB      	MOVWF      R11
0x02B1	0x3008      	MOVLW      8
0x02B2	0x00FC      	MOVWF      R12
0x02B3	0x3077      	MOVLW      119
0x02B4	0x00FD      	MOVWF      R13
L_main10:
0x02B5	0x0BFD      	DECFSZ     R13, 1
0x02B6	0x2AB5      	GOTO       L_main10
0x02B7	0x0BFC      	DECFSZ     R12, 1
0x02B8	0x2AB5      	GOTO       L_main10
0x02B9	0x0BFB      	DECFSZ     R11, 1
0x02BA	0x2AB5      	GOTO       L_main10
;test.c,150 :: 		current[0]= result/1000+48;
0x02BB	0x30E8      	MOVLW      232
0x02BC	0x00F4      	MOVWF      R4
0x02BD	0x3003      	MOVLW      3
0x02BE	0x00F5      	MOVWF      R4+1
0x02BF	0x0835      	MOVF       main_result_L0, 0
0x02C0	0x00F0      	MOVWF      R0
0x02C1	0x0836      	MOVF       main_result_L0+1, 0
0x02C2	0x00F1      	MOVWF      R0+1
0x02C3	0x2161      	CALL       _Div_16X16_U
0x02C4	0x3030      	MOVLW      48
0x02C5	0x07F0      	ADDWF      R0, 1
0x02C6	0x0838      	MOVF       main_current_L0, 0
0x02C7	0x0084      	MOVWF      FSR
0x02C8	0x0870      	MOVF       R0, 0
0x02C9	0x0080      	MOVWF      INDF
;test.c,151 :: 		current[2]= (result/100)%10+48;
0x02CA	0x3002      	MOVLW      2
0x02CB	0x0738      	ADDWF      main_current_L0, 0
0x02CC	0x00B9      	MOVWF      FLOC__main
0x02CD	0x3064      	MOVLW      100
0x02CE	0x00F4      	MOVWF      R4
0x02CF	0x3000      	MOVLW      0
0x02D0	0x00F5      	MOVWF      R4+1
0x02D1	0x0835      	MOVF       main_result_L0, 0
0x02D2	0x00F0      	MOVWF      R0
0x02D3	0x0836      	MOVF       main_result_L0+1, 0
0x02D4	0x00F1      	MOVWF      R0+1
0x02D5	0x2161      	CALL       _Div_16X16_U
0x02D6	0x300A      	MOVLW      10
0x02D7	0x00F4      	MOVWF      R4
0x02D8	0x3000      	MOVLW      0
0x02D9	0x00F5      	MOVWF      R4+1
0x02DA	0x2161      	CALL       _Div_16X16_U
0x02DB	0x0878      	MOVF       R8, 0
0x02DC	0x00F0      	MOVWF      R0
0x02DD	0x0879      	MOVF       R8+1, 0
0x02DE	0x00F1      	MOVWF      R0+1
0x02DF	0x3030      	MOVLW      48
0x02E0	0x07F0      	ADDWF      R0, 1
0x02E1	0x0839      	MOVF       FLOC__main, 0
0x02E2	0x0084      	MOVWF      FSR
0x02E3	0x0870      	MOVF       R0, 0
0x02E4	0x0080      	MOVWF      INDF
;test.c,152 :: 		current[3]= (result/10)%10+48;
0x02E5	0x3003      	MOVLW      3
0x02E6	0x0738      	ADDWF      main_current_L0, 0
0x02E7	0x00B9      	MOVWF      FLOC__main
0x02E8	0x300A      	MOVLW      10
0x02E9	0x00F4      	MOVWF      R4
0x02EA	0x3000      	MOVLW      0
0x02EB	0x00F5      	MOVWF      R4+1
0x02EC	0x0835      	MOVF       main_result_L0, 0
0x02ED	0x00F0      	MOVWF      R0
0x02EE	0x0836      	MOVF       main_result_L0+1, 0
0x02EF	0x00F1      	MOVWF      R0+1
0x02F0	0x2161      	CALL       _Div_16X16_U
0x02F1	0x300A      	MOVLW      10
0x02F2	0x00F4      	MOVWF      R4
0x02F3	0x3000      	MOVLW      0
0x02F4	0x00F5      	MOVWF      R4+1
0x02F5	0x2161      	CALL       _Div_16X16_U
0x02F6	0x0878      	MOVF       R8, 0
0x02F7	0x00F0      	MOVWF      R0
0x02F8	0x0879      	MOVF       R8+1, 0
0x02F9	0x00F1      	MOVWF      R0+1
0x02FA	0x3030      	MOVLW      48
0x02FB	0x07F0      	ADDWF      R0, 1
0x02FC	0x0839      	MOVF       FLOC__main, 0
0x02FD	0x0084      	MOVWF      FSR
0x02FE	0x0870      	MOVF       R0, 0
0x02FF	0x0080      	MOVWF      INDF
;test.c,154 :: 		Lcd_Out(2,10,current);
0x0300	0x3002      	MOVLW      2
0x0301	0x00BA      	MOVWF      FARG_Lcd_Out_row
0x0302	0x300A      	MOVLW      10
0x0303	0x00BB      	MOVWF      FARG_Lcd_Out_column
0x0304	0x0838      	MOVF       main_current_L0, 0
0x0305	0x00BC      	MOVWF      FARG_Lcd_Out_text
0x0306	0x206A      	CALL       _Lcd_Out
;test.c,169 :: 		}
0x0307	0x2A1C      	GOTO       L_main3
;test.c,170 :: 		}
L_end_main:
0x0308	0x2B08      	GOTO       $+0
; end of _main
;test.c,0 :: ?lstr_3_test
0x0309	0x345A ;?lstr_3_test+0
0x030A	0x3463 ;?lstr_3_test+1
0x030B	0x3468 ;?lstr_3_test+2
0x030C	0x3461 ;?lstr_3_test+3
0x030D	0x3472 ;?lstr_3_test+4
0x030E	0x3420 ;?lstr_3_test+5
0x030F	0x3450 ;?lstr_3_test+6
0x0310	0x3461 ;?lstr_3_test+7
0x0311	0x3470 ;?lstr_3_test+8
0x0312	0x3461 ;?lstr_3_test+9
0x0313	0x3472 ;?lstr_3_test+10
0x0314	0x346F ;?lstr_3_test+11
0x0315	0x3476 ;?lstr_3_test+12
0x0316	0x3400 ;?lstr_3_test+13
; end of ?lstr_3_test
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [5]    _Delay_1us
0x0008      [11]    _Delay_5500us
0x0013       [8]    _Delay_50us
0x001B      [64]    _Lcd_Cmd
0x005B       [7]    _____DoICP
0x0062       [8]    _Lcd_Chr_CP
0x006A      [64]    _Lcd_Out
0x00AA      [73]    _lcd_puts
0x00F3      [12]    _system_init
0x00FF      [43]    _ADC_Read
0x012A      [12]    ___CC2DW
0x0136      [43]    _Mul_16X16_U
0x0161      [29]    _Div_16X16_U
0x017E       [8]    _ADC_Init
0x0186      [78]    _Lcd_Init
0x01D4     [309]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [0]    LCD_EN
0x0007       [0]    RC0_bit
0x0007       [0]    LCD_RS
0x0007       [0]    LCD_D6
0x0007       [0]    LCD_D7
0x0007       [0]    LCD_D4
0x0007       [0]    LCD_D5
0x0007       [1]    PORTC
0x0007       [0]    RC5_bit
0x0007       [0]    RC7_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC1_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC3_bit
0x000A       [1]    PCLATH
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x001F       [0]    GO_DONE_bit
0x0020       [5]    ?lstr2_test
0x0025       [5]    ?lstr1_test
0x002A       [1]    _counter
0x002B       [2]    _position
0x002D       [2]    ___DoICPAddr
0x002F       [0]    __Lib_Lcd_cmd_status
0x0030       [4]    main_display_L0
0x0034       [1]    main_i_L0
0x0035       [2]    main_result_L0
0x0037       [1]    main_voltage_L0
0x0038       [1]    main_current_L0
0x0039       [1]    FLOC__main
0x003A       [1]    FARG_ADC_Read_channel
0x003A       [1]    FARG_Lcd_Out_row
0x003A       [1]    FARG_lcd_puts_row
0x003B       [1]    FARG_lcd_puts_column
0x003B       [1]    FARG_Lcd_Out_column
0x003C       [2]    FARG_lcd_puts_s
0x003C       [1]    FARG_Lcd_Out_text
0x003D       [1]    Lcd_Out_i_L0
0x003E       [1]    lcd_puts_cnt_L0
0x003F       [1]    FARG_Lcd_Chr_CP_out_char
0x0040       [1]    FARG_Lcd_Cmd_out_char
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0087       [0]    LCD_D7_Direction
0x0087       [0]    LCD_D6_Direction
0x0087       [0]    LCD_RS_Direction
0x0087       [0]    LCD_EN_Direction
0x0087       [0]    LCD_D5_Direction
0x0087       [0]    LCD_D4_Direction
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC2_bit
0x0087       [0]    TRISC0_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC5_bit
0x009C       [1]    CMCON
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0309      [14]    ?lstr_3_test
